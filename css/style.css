*{
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

 body {
    margin: 0;
    font-family: Arial, Helvetica, sans-serif;
    background: #333;
    color: #fff;
    font-size: 1.1em;
    line-height: 1.5;
    text-align: center;
  }
  /*- Обратите внимание на высоту враппера.*/
.wrapper{
  display: grid;
  /*min-height: 100vh;*/
	grid-template: minmax(100px, auto) 1fr minmax(70px, auto) / 1fr;
  grid-template-areas:
  'header'
  'main'
  'footer' ;

}
  h1, h2, h3 {
    margin: 0;
    padding: 1em 0;
}
p {
  margin: 0;
  padding: 1em 0;
}
h1{
  padding-top: 100px;
  padding-bottom: 0;
}
.btn {
  display: inline-block;
  background: #333;
  color: #fff;
  text-decoration: none;
  padding: 1em 2em;
  border: 1px solid #666;
  margin: 0.5em 0;
}
.btn:hover {
  background: #eaeaea;
  color: #333;
}

.headerContainer{
  grid-area: header;
  min-height: 450px;
  position: relative;
}
.headerContent{
  position: absolute;
  background: #333 url(../images/imageBG.png);
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
  width: 100%;
  height: 450px;
  z-index: -1;
  opacity: 0.4;
}
.mainContainer{
  grid-area: main;
}
/*- вторую сверху секцию с колонками было бы неплохо ограничить по ширине, колонки на широком экране некрасиво расползаются и превращаются в одну левую. 
Концептуальное пожелание: Было бы неплохо исселовать поведение образца при масштабировании и сужении.  Можно заметить, что там контент в 1-4 секциях ограничен 992 или 120 пикселями по ширине. Тогда все эти блоки можно сделать грид-контейнерами и распределить пространство по ширине по одной части пустой по бокам (похоже как в кардКонтейнере), а средней ограничить ширину minmax`ом.*/
.sectionA {
  background: #eaeaea;
  color: #333;
  padding-bottom: 2em;
}

@media (min-width: 700px){
.contentText {
    display: grid;
    grid-template-columns: 1fr repeat(2, minmax(auto, 400px)) 1fr;
}
.contentText>p{
  grid-column: 2/span 2;
  column-count: 2;
  column-fill: balance;
  column-gap: 30px;
  padding: 0 1em;
  }

}
/*.sectionA{
  background: #eaeaea;
  color: #333;
  padding-bottom: 2em;
}
@media (min-width: 700px)  { 
.contentText>p{
  column-count: 2;
  column-gap: 30px;*/
}
}
/*- непонятная серая полоса над футером. */
/*это был лишний паддинг в sectionB*/
#sectionB{
    padding: 1em 0 0 0;
}
@media (min-width: 700px){
.cardContainer{
  display: grid;
  grid-template: 1fr/1fr repeat(3, minmax( 150px, auto)) 1fr; 
  grid-column-gap: 20px;
  justify-content: center;

}
.card:first-child{
  grid-column-start:2;
}
.card{
  max-width: 250px;
}

}
.cardContainer{
    margin: 1em auto 1em auto;
    background: #333;
    color: #333;
    align-items: center;
    justify-content: center;

}


.card{
    background: #fff;
    color: #333;
    width: 100%;
    height: 100%;
    margin-bottom: 15px;

}
.cardImage{
  width: 100%;
  height: auto;
  overflow: hidden;
}
img{
  display: block;
  width: 100%;
  height: auto; 
}
.cardContent{
  padding: 1.5em;
}
 .sectionC {
  background: #fff;
  color: #333;
  padding: 2em;}
  
  .sectionD .box:first-child {
    background: #2690d4;
  }
  .sectionD .box {
    padding: 2em;
    color: #fff;
  }
  @media (min-width:700px) {
    .sectionD {
      display: grid;
      grid-template: 1fr/1fr 1fr;

    }
   }
.footer{
  grid-area: footer;
  padding: 2em;
  background: #000;
  color: #fff;
  text-align: center;
}

   /*- обратите внимание на футер, там блоки занимают не по половине ширины, как в примере задумано, а иначе.- Неправильный синтаксис был и медиа не работал вообще.*/

@media (min-width: 700px){
.footer {
    display: grid;
    grid-template-columns: repeat(2, minmax(auto, 25em));
    justify-content: center;
  }
}